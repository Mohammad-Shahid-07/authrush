{
  "name": "settings.action",
  "files": [
    {
      "name": "settings.action",
      "content": "import React, { useState, useTransition } from 'react';\nimport { CardWrapper } from '@/components/auth/CardWrapper';\nimport { useForm } from 'react-hook-form';\nimport { ResetSchema } from '@/validations';\nimport * as z from 'zod';\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { FormError } from '@/components/auth/FormError';\nimport { FormSuccess } from '@/components/auth/FormSuccess';\nimport { resetPassword } from '@/actions/auth.actions';\nimport { zodResolver } from '@hookform/resolvers/zod';\n\nexport const ResetForm = () => {\n  const [error, setError] = useState<string | undefined>('');\n  const [success, setSuccess] = useState<string | undefined>('');\n  const [isPending, startTransition] = useTransition();\n  const form = useForm<z.infer<typeof ResetSchema>>({\n    resolver: zodResolver(ResetSchema),\n    defaultValues: {\n      email: '',\n    },\n  });\n\n  async function onSubmit(values: z.infer<typeof ResetSchema>) {\n      setSuccess(\"\");\n      setError(\"\");\n          startTransition(() => {\n      resetPassword(values).then((res) => {\n        setError(res?.error);\n        setSuccess(res?.success);\n      });\n    });\n  }\n\n  return (\n    <CardWrapper\n      headerLabel='Forgot Your Password?'\n      BackButtonLabel='Back to login'\n      BackButtonHref='/login'\n    >\n      <Form {...form}>\n        <form onSubmit={form.handleSubmit(onSubmit)} className='space-y-8'>\n          <div className='space-y-6'>\n            <FormField\n              control={form.control}\n              name='email'\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Email</FormLabel>\n                  <FormControl>\n                    <Input\n                      placeholder='jogn.doe@example.com'\n                      type='email'\n                      {...field}\n                      disabled={isPending}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          </div>\n          <FormError message={error} />\n          <FormSuccess message={success} />\n          <Button type='submit' className='w-full text-white bg-slate-800' disabled={isPending}>\n            Send Reset Link\n          </Button>\n        </form>\n      </Form>\n    </CardWrapper>\n  );\n};"
    }
  ],
  "type": "actions"
}
