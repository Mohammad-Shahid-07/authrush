{
  "name": "DangerContent",
  "files": [
    {
      "name": "DangerContent.tsx",
      "content": "\"use client\";\nimport { Button } from '@/components/ui/button';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '@/components/ui/dialog';\nimport { DeleteAccountSchema } from '@/validations';\nimport { deleteUser } from '@/actions/user.actions';\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport * as z from 'zod';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { FormError } from '@/components/auth/FormError';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { cn } from '@/lib/utils';\n\nconst DangerContent = () => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"text-xl font-bold text-rose-500\">\n          Danger\n        </CardTitle>\n        <CardDescription className=\"text-slate-700\">\n          Once you delete your account, there is no going back. Please be\n          certain.\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"space-y-2\">\n        <Dialog>\n          <DialogTrigger asChild>\n            <Button\n              variant=\"destructive\"\n              className=\"mt-5 bg-red-500 text-white\"\n            >\n              Delete Account\n            </Button>\n          </DialogTrigger>\n          <DialogContent className=\"sm:max-w-[425px] bg-white\">\n            <DialogHeader>\n              <DialogTitle className=\"text-red-500\">\n                 Delete Account\n              </DialogTitle>\n              <DialogDescription className=\"text-slate-700\">\n                Please enter your password to confirm account deletion.\n              </DialogDescription>\n            </DialogHeader>\n            <DeleteForm />\n          </DialogContent>\n        </Dialog>\n      </CardContent>\n    </Card>\n  );\n};\n\nfunction DeleteForm({ className }: React.ComponentProps<'form'>) {\n  const [error, setError] = useState<string | undefined>('');\n  const [isPending, setIsPending] = useState<boolean | undefined>(false);\n  const form = useForm<z.infer<typeof DeleteAccountSchema>>({\n    resolver: zodResolver(DeleteAccountSchema),\n    defaultValues: {\n      password: '',\n    },\n  });\n\n  // 2. Define a submit handler.\n  async function onSubmit(values: z.infer<typeof DeleteAccountSchema>) {\n    try {\n      setIsPending (true);\n      setError(\"\");\n         await deleteUser(values.password).then((res) => {\n        if (res.error) {\n          setError(res.error);\n        }\n      });\n    } catch (error) {\n      setError('Something Went Wrong');\n    } finally {\n      setIsPending(false);\n    }\n  }\n  return (\n    <Form {...form}>\n      <form\n        onSubmit={form.handleSubmit(onSubmit)}\n        className={cn('grid items-start gap-4', className)}\n      >\n        <FormField\n          control={form.control}\n          name=\"password\"\n          render={({ field }) => (\n            <FormItem className=\"space-y-3.5\">\n             <FormLabel className=\"font-semibold text-slate-700 \">\n                Password\n              </FormLabel>\n              <FormControl>\n                <Input\n                  placeholder=\"******\"\n                  type=\"password\"\n                  {...field}\n                  className=\"no-focus border-slate-400 text-gray-600 border \"\n                />\n              </FormControl>\n\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <FormError message={error} />\n        <Button\n          type=\"submit\"\n          disabled={isPending}\n          className=\" mb-2 rounded-lg bg-red-500  text-white \"\n        >\n          Delete Account\n        </Button>\n      </form>\n    </Form>\n  );\n}\n\nexport default DangerContent;"
    }
  ],
  "type": "components:user"
}
